MotifStatistic Software Suite Copyright (C) 2007 Utz J. Pape

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, see <http://www.gnu.org/licenses/>.

Content:

1. Compilation
2. cstat for count statistics
3. sstat for similarity measure
4. scluster for clustering based on similarity
5. bsanno for clustering
6. pfmic to compute information content and power
8. OMP Computing
9. Website & Comments
10. Citation

*********** 1. Compilation

Run for compilation

>make all

and to clean

>make clean

*********** 2. cstat

Returns the count statistics

Call ./cstat <gc> <transfac-file> <threshold-method> <threshold-parameter> where the parameters have to be as followed:

<gc>: gc content, e.g. '.4', for the background model
<[file:]transfac-file>: file describing the PFM in transfac format, e.g. 'data/nothing.mat'. See data/nothing.mat as an example. The program assumes the line tag ID to occur first. Next, it searches for P0, 01, 02 and so on until the next line does not contain the next number. If filename is preceded by file: one can pass a file containing a list of transfac filenames as parameter.
<threshold-method>: the treshold method:
  typeI: set threshold such that typeI error is equal to threshold-parameter.
  typeII: set threshold such that typeII error is equal to threshold-parameter.
  balanced: set threshold such that typeI error equals typeII, threshold-parameter can be any number (is not used but has to be passed as parameter)
  typeIext: set threshold to balanced threshold if it's possible such that typeI error is less or equal than threshold-parameter. Otherwise, set typeI error equal to threshold-parameter.
  threshold: threshold-parameter contains the threshold.
[regularize]: if not set or set to a true value (1), the regularization method from Rahmann et al. 2005 is applied. Otherwise, we just add pseudocounts.
[parameter|lambda|theta|rate|cpd]: if this parameter exist, the running time of the statistical calculation (without reading input/preparing PSSM, and so on) is printed. Depending on the choice of this parameter, following output is printed:
  parameter: only xi, xi', xi'0, alpha, theta1
  lambda: in addition: lambda1, lambda2
  theta: in addition, all thetas until < precision
  rate: in addition, rate r (give sequence length in next parameter) without theta
  cpd: in addition, all P(X>=x) until < precision (give sequence length)
[sequence-length]: length of the sequence

The typeI error is measured as the probability of at least one false positive in a region of length 500 (see Pape et al. 2006: alpha_500).

Examples:

./cstat .4 data/matrixA.mat threshold 30

Assumes gc-content of 40%, uses matrix given in data/matrixA.mat and sets the threshold to 30.

./cstat .3 file:data/matrix.list typeIext .1

Iterates over the transfac files given in data/matrix.list and sets for each matrix the threshold such that typeI error is equal to typeII error or (it not possible) the typeI error to .1.

./cstat .4 data/matrixA.mat typeI .1 0 cpd 10000

Returns hit statistic for a sequence of length 10000 with gc-content 40% after setting the threshold for the non-regularized (only pseudo-counts added) such that the type I error is equal to 10%.

*********** 3. sstat

Returns the similarity between PFMs

Call ./sstat <gc> <transfac-file> <threshold-method> <threshold-parameter> [<partial-execution>] where most parameters are the same as for cstat except that the <transfac-file> has to be a list of matrices (but don't use file: as prefix!). New parameters:

<partial-execution>: integer i: if not given, whole similarity matrix is computed. if given, only the ith and the n-i th line of the similarity matrix are computed and return in special format (to be read by scluster). if -1 then simstat uses SGE cluster itself.

Output:

Matrix with following columns:

matrixA: first matrix
matrixB: second matrix
Smax: Similarities summarized by using the maximum
Ssum: Similarities summarized by using the sum
imax: Position with the highest similarity (B is shifted against fixed A!)
bimaxp: maximum similarity is a reverse complementary hit (1) otherwise (0)

Example:

./sstat .4 data/matrix.list balanced .1

Compute similarities between all pairs of matrices from data/matrix.list using a balanced threshold. Last parameter (dummy!) can be arbitrarily selected.

*********** 4. scluster

Returns a clustering of  PFMs

Call ./scluster <gc> <transfac-file> <threshold-method> <threshold-parameter> [<use-sge>] [<p=.95>] where most parameters are the same as for cstat except that the <transfac-file> has to be a list of matrices (but don't use file: as prefix!). New parameters:


<use-sge>: 0/1 (standard: 0) uses sge engine to build similarity matrix

<p>: Two PFMs are considered for merging only if their Smax value is higher than the quantile p of all pairwise Smax values.

Output:

Matrix with following columns:

matrixA: first matrix
matrixB: second matrix
QA: power of matrix A
QB: power of matrix B
icA: information content of matrix A
icB: information content of matrix B
Smax: Similarities summarized by using the maximum
imax: Position with the highest similarity (B is shifted against fixed A!)
bimaxp: maximum similarity is a reverse complementary hit (1) otherwise (0)
Q: power of new matrix
ic: information content of new matrix

Furthermore, a file with the name <transfac-file>.cluster is written containing the transfac familial binding profiles for each cluster including singletons.

Example:

./scluster .4 data/matrix.list balanced .1

Computes clustering of all pairs of matrices from data/matrix.list using a balanced threshold.

*********** 6. bsanno for clustering
to be written

*********** 7. pfmic to compute information content and power
to be written

*********** 8. OMP Computing
to be written

*********** 9. Website & Comments

Check out the website http://mosta.molgen.mpg.de for new revisions
and an online version of the program. Send comments, suggestions etc. to utz.pape@molgen.mpg.de.

*********** 10. Citation

if you use the count statistic in any published work, please cite the following article (and, if possible, give a link to http://mosta.molgen.mpg.de):

@UNPUBLISHED{pape2007a,
  author = {Utz J. Pape and Sven Rahmann and Fengzhu Sun and Martin Vingron},
  title = {{Compound Poisson approximation of DNA motif counts on both strands}},
  note = {submitted to JCB},
  year = {2007}
}

if you use the similarity or the clustering in any published work, please cite the following article (and, if possible, give a link to http://mosta.molgen.mpg.de):

@UNPUBLISHED{pape2007b,
  author = {Utz J. Pape and Sven Rahmann and Martin Vingron},
  title = {{Limiting Covariance between DNA Motif Counts as a Similarity Measure between Position Frequency Matrices with an Application to Clustering}},
  note = {submitted to Bioinformatics},
  year = {2007}
}
